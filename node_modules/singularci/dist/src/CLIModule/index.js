#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const typedi_1 = __importStar(require("typedi"));
const DSLParser_1 = __importDefault(require("../Parser/DSLParser"));
const GitLabModule_1 = require("../Targets/GitLabModule");
const index_1 = require("./../Targets/GitHubModule/index");
const fs_1 = __importDefault(require("fs"));
let Program = class Program {
    constructor(parser) {
        this.main = () => {
            const gitHubConfigGenerator = new index_1.GitHubConfigGenerator(this.parser.parse());
            gitHubConfigGenerator.generateConfig();
            const gitLabConfigGenerator = new GitLabModule_1.GitLabConfigGenerator(this.parser.parse());
            gitLabConfigGenerator.generateConfig();
        };
        this.parser = parser;
    }
};
Program = __decorate([
    (0, typedi_1.Service)({ id: 'program' }),
    __param(0, (0, typedi_1.Inject)('dslparser')),
    __metadata("design:paramtypes", [DSLParser_1.default])
], Program);
typedi_1.default.set('dslparser.inputFileName', '.singularci.yml');
const program = typedi_1.default.get('program');
program.main();
fs_1.default.rmSync('.singularci-copy.yml');
//# sourceMappingURL=index.js.map